/*
 * This source file was generated by the Gradle 'init' task
 */
package irctc.booking;

import irctc.booking.entities.Train;
import irctc.booking.entities.User;
import irctc.booking.service.UserBookingService;
import irctc.booking.util.UserServiceUtil;

import java.io.IOException;
import java.util.*;

public class App {
    public static void main(String[] args) {
        System.out.println("Running Train Booking System");
        Scanner scanner = new Scanner(System.in);
        int option = 0;
        UserBookingService userBookingService;
        try {
            userBookingService = new UserBookingService();
        } catch(IOException ex) {
            System.out.println("Exception : " + ex.getMessage());
            System.out.println("There is something wrong");
            return;
        }
        while(option != 7) {
            System.out.println("Choose an option");
            System.out.println("1. Sign Up");
            System.out.println("2. Login");
            System.out.println("3. Fetch Bookings");
            System.out.println("4. Search Trains");
            System.out.println("5. Book a Seat");
            System.out.println("6. Cancel my Booking");
            System.out.println("7. Exit the App");
            option = scanner.nextInt();
            Train trainSelectedForBooking = new Train();
            switch (option) {
                case 1:
                    System.out.println("Enter the username to signup");
                    String nameToSignUp = scanner.next();
                    System.out.println("Enter the password to signup");
                    String passwordToSignUp = scanner.next();
                    User userToSignUp = new User(nameToSignUp, passwordToSignUp,
                            UserServiceUtil.hashPassword(passwordToSignUp),
                            new ArrayList<>(),
                            UUID.randomUUID().toString());
                    userBookingService.signUp(userToSignUp);
                    break;
                case 2:
                    System.out.println("Enter the username to login");
                    String username = scanner.next();
                    System.out.println("Enter the password to login");
                    String password = scanner.next();
                    User userToLogin = new User(username, password,
                            UserServiceUtil.hashPassword(password),
                            new ArrayList<>(), UUID.randomUUID().toString());
                    try {
                        userBookingService = new UserBookingService(userToLogin);
                    } catch (IOException e) {
                        throw new RuntimeException(e);
                    }
                    break;
                case 3:
                    System.out.println("Fetching your bookings");
                    userBookingService.fetchBooking();
                    break;
                case 4:
                    System.out.println("Type your source station");
                    String source = scanner.next();
                    System.out.println("Type your destination station");
                    String dest = scanner.next();
                    List<Train> trains;
                    try {
                        trains = userBookingService.getTrains(source, dest);
                        int index = 1;
                        for (Train t: trains) {
                            System.out.println(index + " Train Number : " + t.getTrainId());
                            for (Map.Entry<String, String> entry: t.getStationTimes().entrySet()) {
                                System.out.println("Station: " + entry.getKey() + " Time: " + entry.getValue());
                            }
                        }
                        System.out.println("Select a train by typing 1,2,3,...");
                        trainSelectedForBooking = trains.get(scanner.nextInt());
                    } catch (IOException ex) {
                        System.out.println("Exception occured while searching for trains. Try another option");
                    }
                    break;
                case 5:
                    System.out.println("Select a seat out of these seats");
                    List<List<Integer>> seats = userBookingService.fetchSeats(trainSelectedForBooking);
                    for (List<Integer> row: seats) {
                        for (Integer val: row) {
                            System.out.println(val+" ");
                        }
                        System.out.println();
                    }
                    System.out.println("Select the seat by typing the row and col");
                    System.out.println("Enter the row no: ");
                    int row = scanner.nextInt();
                    System.out.println("Enter the col no: ");
                    int col = scanner.nextInt();
                    System.out.println("Booking your seat");
                    Boolean booked = userBookingService.bookTrainTicket(trainSelectedForBooking, row, col);
                    if ((booked.equals(Boolean.TRUE))) {
                        System.out.println("Booked, Enjoy your Journey");
                    } else {
                        System.out.println("Can't book this seat...");
                    }

            }
        }
    }
}
